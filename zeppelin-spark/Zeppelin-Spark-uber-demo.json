{"paragraphs":[{"text":"//This is an exmaple how to use Zeppelin with Spark SQL for Machine Learning \n//Example Use Case Data Set\n\n//The example data set is Uber trip data, which  obtained from the NYC Taxi & Limousine Commission. In this example, we will discover the clusters of Uber data based on t\n//longitude and latitude, then we will analyze the cluster centers by date/time. The data set has the following schema:\n//The Data Set Schema\n\n//  Date/Time: The date and time of the Uber pickup\n//  Lat: The latitude of the Uber pickup\n//  Lon: The longitude of the Uber pickup\n//  Base: The TLC base company affiliated with the Uber pickup\n\n//sample data\n//2014-08-31 23:59:00,40.7395,-73.9889,B02764\n//2014-08-31 23:59:00,40.727,-73.9802,B02764\n\n\nimport org.apache.spark.sql.Encoders\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.clustering.KMeans\n\ncase class uber(dt:java.sql.Timestamp,lat:Double,lon:Double,base:String)\n\nval uberschema=Encoders.product[uber].schema\n\nval uberDF=spark.read.schema(uberschema).csv(\"/Users/kaicat/server/spark-ml-kmeans-uber/data/uber.csv\")\nuberDF.printSchema()\nuberDF.cache()","user":"anonymous","dateUpdated":"2018-08-13T17:41:12-0700","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.Encoders\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.clustering.KMeans\ndefined class uber\nuberschema: org.apache.spark.sql.types.StructType = StructType(StructField(dt,TimestampType,true), StructField(lat,DoubleType,false), StructField(lon,DoubleType,false), StructField(base,StringType,true))\nuberDF: org.apache.spark.sql.DataFrame = [dt: timestamp, lat: double ... 2 more fields]\nroot\n |-- dt: timestamp (nullable = true)\n |-- lat: double (nullable = true)\n |-- lon: double (nullable = true)\n |-- base: string (nullable = true)\n\nres83: uberDF.type = [dt: timestamp, lat: double ... 2 more fields]\n"}]},"apps":[],"jobName":"paragraph_1532538465252_436879427","id":"20180724-212845_2076391337","dateCreated":"2018-07-25T10:07:45-0700","dateStarted":"2018-07-30T16:52:20-0700","dateFinished":"2018-07-30T16:52:24-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:102"},{"text":"val featurecols=Array(\"lat\",\"lon\")\nval assembler=new VectorAssembler().setInputCols(featurecols).setOutputCol(\"features\")\nval uberwithfeaturesDF=assembler.transform(uberDF)\nuberwithfeaturesDF.printSchema()\nuberwithfeaturesDF.show()","user":"anonymous","dateUpdated":"2018-07-30T16:52:19-0700","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"featurecols: Array[String] = Array(lat, lon)\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_7ce203d0f5a0\nuberwithfeaturesDF: org.apache.spark.sql.DataFrame = [dt: timestamp, lat: double ... 3 more fields]\nroot\n |-- dt: timestamp (nullable = true)\n |-- lat: double (nullable = true)\n |-- lon: double (nullable = true)\n |-- base: string (nullable = true)\n |-- features: vector (nullable = true)\n\n+-------------------+-------+--------+------+------------------+\n|                 dt|    lat|     lon|  base|          features|\n+-------------------+-------+--------+------+------------------+\n|2014-08-01 00:00:00| 40.729|-73.9422|B02598| [40.729,-73.9422]|\n|2014-08-01 00:00:00|40.7476|-73.9871|B02598|[40.7476,-73.9871]|\n|2014-08-01 00:00:00|40.7424|-74.0044|B02598|[40.7424,-74.0044]|\n|2014-08-01 00:00:00| 40.751|-73.9869|B02598| [40.751,-73.9869]|\n|2014-08-01 00:00:00|40.7406|-73.9902|B02598|[40.7406,-73.9902]|\n|2014-08-01 00:00:00|40.6994|-73.9591|B02617|[40.6994,-73.9591]|\n|2014-08-01 00:00:00|40.6917|-73.9398|B02617|[40.6917,-73.9398]|\n|2014-08-01 00:00:00|40.7063|-73.9223|B02617|[40.7063,-73.9223]|\n|2014-08-01 00:00:00|40.6759|-74.0168|B02617|[40.6759,-74.0168]|\n|2014-08-01 00:00:00|40.7617|-73.9847|B02617|[40.7617,-73.9847]|\n|2014-08-01 00:00:00|40.6969|-73.9064|B02617|[40.6969,-73.9064]|\n|2014-08-01 00:00:00|40.7623|-73.9751|B02617|[40.7623,-73.9751]|\n|2014-08-01 00:00:00|40.6982|-73.9669|B02617|[40.6982,-73.9669]|\n|2014-08-01 00:00:00|40.7553|-73.9253|B02617|[40.7553,-73.9253]|\n|2014-08-01 00:00:00|40.7325|-73.9876|B02682|[40.7325,-73.9876]|\n|2014-08-01 00:00:00|40.6754| -74.017|B02682| [40.6754,-74.017]|\n|2014-08-01 00:00:00|40.7303|-74.0029|B02682|[40.7303,-74.0029]|\n|2014-08-01 00:00:00|40.7218|-73.9973|B02682|[40.7218,-73.9973]|\n|2014-08-01 00:00:00|40.7134|-74.0091|B02682|[40.7134,-74.0091]|\n|2014-08-01 00:00:00|40.7194|-73.9964|B02682|[40.7194,-73.9964]|\n+-------------------+-------+--------+------+------------------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.0.1:4040/jobs/job?id=39"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1532538465253_-1787020850","id":"20180724-213507_230491819","dateCreated":"2018-07-25T10:07:45-0700","dateStarted":"2018-07-30T16:52:21-0700","dateFinished":"2018-07-30T16:52:24-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:103"},{"text":"val Array(traindata,testdata)=uberwithfeaturesDF.randomSplit(Array(0.7,0.3),1234)\n\nval km=new KMeans().setK(8).setFeaturesCol(\"features\").setPredictionCol(\"prediction\")\nval ubermodel=km.fit(traindata)\n\nprintln(\"Final centers:\")\nubermodel.clusterCenters.foreach(println)\n\n","user":"anonymous","dateUpdated":"2018-07-30T16:51:59-0700","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"traindata: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [dt: timestamp, lat: double ... 3 more fields]\ntestdata: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [dt: timestamp, lat: double ... 3 more fields]\nkm: org.apache.spark.ml.clustering.KMeans = kmeans_516b3c90eeb3\nubermodel: org.apache.spark.ml.clustering.KMeansModel = kmeans_516b3c90eeb3\nFinal centers:\n[40.755335370137786,-73.98161600295062]\n[40.977916249386354,-73.78719263622975]\n[40.77020807817589,-73.45980964169384]\n[40.65798853012022,-73.7784922463187]\n[40.81914203286763,-73.94423225584596]\n[40.70860865604272,-73.99371288814325]\n[40.74772290214316,-73.88466423386986]\n[40.365600314465404,-74.20619842767296]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.0.1:4040/jobs/job?id=1","http://192.168.0.1:4040/jobs/job?id=2","http://192.168.0.1:4040/jobs/job?id=3","http://192.168.0.1:4040/jobs/job?id=4","http://192.168.0.1:4040/jobs/job?id=5","http://192.168.0.1:4040/jobs/job?id=6","http://192.168.0.1:4040/jobs/job?id=7","http://192.168.0.1:4040/jobs/job?id=8","http://192.168.0.1:4040/jobs/job?id=9","http://192.168.0.1:4040/jobs/job?id=10","http://192.168.0.1:4040/jobs/job?id=11","http://192.168.0.1:4040/jobs/job?id=12","http://192.168.0.1:4040/jobs/job?id=13","http://192.168.0.1:4040/jobs/job?id=14","http://192.168.0.1:4040/jobs/job?id=15","http://192.168.0.1:4040/jobs/job?id=16","http://192.168.0.1:4040/jobs/job?id=17","http://192.168.0.1:4040/jobs/job?id=18","http://192.168.0.1:4040/jobs/job?id=19","http://192.168.0.1:4040/jobs/job?id=20","http://192.168.0.1:4040/jobs/job?id=21","http://192.168.0.1:4040/jobs/job?id=22","http://192.168.0.1:4040/jobs/job?id=23","http://192.168.0.1:4040/jobs/job?id=24","http://192.168.0.1:4040/jobs/job?id=25","http://192.168.0.1:4040/jobs/job?id=26","http://192.168.0.1:4040/jobs/job?id=27"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1532538465253_843303657","id":"20180724-213913_565691165","dateCreated":"2018-07-25T10:07:45-0700","dateStarted":"2018-07-30T16:51:59-0700","dateFinished":"2018-07-30T16:52:08-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:104"},{"text":"val predictions=ubermodel.transform(testdata)\npredictions.show()","user":"anonymous","dateUpdated":"2018-07-30T16:52:08-0700","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"predictions: org.apache.spark.sql.DataFrame = [dt: timestamp, lat: double ... 4 more fields]\n+-------------------+-------+--------+------+------------------+----------+\n|                 dt|    lat|     lon|  base|          features|prediction|\n+-------------------+-------+--------+------+------------------+----------+\n|2014-08-01 00:00:00|40.3495|-74.0667|B02682|[40.3495,-74.0667]|         7|\n|2014-08-01 00:00:00|40.3495|-74.0667|B02682|[40.3495,-74.0667]|         7|\n|2014-08-01 00:00:00|40.6754| -74.017|B02682| [40.6754,-74.017]|         5|\n|2014-08-01 00:00:00|40.7303|-74.0029|B02682|[40.7303,-74.0029]|         5|\n|2014-08-01 00:01:00|40.7052|-74.0094|B02598|[40.7052,-74.0094]|         5|\n|2014-08-01 00:01:00|40.7073|-74.0054|B02598|[40.7073,-74.0054]|         5|\n|2014-08-01 00:01:00| 40.742|-74.0041|B02617| [40.742,-74.0041]|         0|\n|2014-08-01 00:01:00|40.7552|-73.9724|B02682|[40.7552,-73.9724]|         0|\n|2014-08-01 00:02:00|40.6123| -73.956|B02598| [40.6123,-73.956]|         5|\n|2014-08-01 00:02:00| 40.705|-73.9204|B02598| [40.705,-73.9204]|         6|\n|2014-08-01 00:02:00|40.7236|-73.9913|B02617|[40.7236,-73.9913]|         5|\n|2014-08-01 00:02:00|40.7407|-74.0077|B02598|[40.7407,-74.0077]|         0|\n|2014-08-01 00:02:00|40.7642|-73.9103|B02682|[40.7642,-73.9103]|         6|\n|2014-08-01 00:03:00|40.6969|-73.9064|B02598|[40.6969,-73.9064]|         6|\n|2014-08-01 00:03:00|40.7488|-73.9868|B02617|[40.7488,-73.9868]|         0|\n|2014-08-01 00:03:00|40.7605|-73.9757|B02682|[40.7605,-73.9757]|         0|\n|2014-08-01 00:04:00|40.7279|-74.0059|B02617|[40.7279,-74.0059]|         5|\n|2014-08-01 00:04:00|40.7398|-74.0062|B02764|[40.7398,-74.0062]|         0|\n|2014-08-01 00:04:00| 40.753|-73.9787|B02598| [40.753,-73.9787]|         0|\n|2014-08-01 00:05:00|40.6834|-73.9966|B02682|[40.6834,-73.9966]|         5|\n+-------------------+-------+--------+------+------------------+----------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.0.1:4040/jobs/job?id=28"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1532538465253_-367554063","id":"20180724-214731_1322745938","dateCreated":"2018-07-25T10:07:45-0700","dateStarted":"2018-07-30T16:52:08-0700","dateFinished":"2018-07-30T16:52:09-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:105"},{"text":"//Which hours of the day and which cluster had the highest number of pickups?\n\npredictions.createOrReplaceTempView(\"uber\")\n\n\n\n","user":"anonymous","dateUpdated":"2018-07-30T16:52:09-0700","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1532538465253_-646194676","id":"20180724-215033_1978589617","dateCreated":"2018-07-25T10:07:45-0700","dateStarted":"2018-07-30T16:52:09-0700","dateFinished":"2018-07-30T16:52:10-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:106"},{"text":"z.show(predictions.select(hour($\"dt\").alias(\"hour\"), $\"prediction\").groupBy(\"hour\",\"prediction\").agg(count(\"prediction\").alias(\"totalpickups\")).orderBy(\"hour\",\"prediction\"))\n","user":"anonymous","dateUpdated":"2018-08-14T16:57:20-0700","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"hour","index":0,"aggr":"sum"}],"groups":[{"name":"prediction","index":1,"aggr":"sum"}],"values":[{"name":"totalpickups","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"hour\tprediction\ttotalpickups\n0\t0\t2607\n0\t1\t23\n0\t2\t23\n0\t3\t193\n0\t4\t298\n0\t5\t3006\n0\t6\t336\n0\t7\t24\n1\t0\t1790\n1\t1\t18\n1\t2\t12\n1\t3\t57\n1\t4\t152\n1\t5\t2046\n1\t6\t258\n1\t7\t6\n2\t0\t1246\n2\t1\t14\n2\t2\t9\n2\t3\t51\n2\t4\t140\n2\t5\t1396\n2\t6\t175\n2\t7\t4\n3\t0\t1289\n3\t1\t9\n3\t2\t6\n3\t3\t49\n3\t4\t206\n3\t5\t1348\n3\t6\t189\n3\t7\t2\n4\t0\t1307\n4\t1\t12\n4\t2\t7\n4\t3\t214\n4\t4\t251\n4\t5\t1443\n4\t6\t232\n4\t7\t3\n5\t0\t1989\n5\t1\t14\n5\t2\t4\n5\t3\t344\n5\t4\t392\n5\t5\t1913\n5\t6\t325\n5\t7\t3\n6\t0\t3393\n6\t1\t21\n6\t2\t9\n6\t3\t356\n6\t4\t497\n6\t5\t2751\n6\t6\t408\n6\t7\t1\n7\t0\t5272\n7\t1\t33\n7\t2\t14\n7\t3\t233\n7\t4\t610\n7\t5\t3524\n7\t6\t506\n7\t7\t1\n8\t0\t5299\n8\t1\t28\n8\t2\t26\n8\t3\t132\n8\t4\t636\n8\t5\t3641\n8\t6\t601\n8\t7\t3\n9\t0\t4350\n9\t1\t32\n9\t2\t23\n9\t3\t173\n9\t4\t559\n9\t5\t3206\n9\t6\t726\n9\t7\t8\n10\t0\t4471\n10\t1\t37\n10\t2\t24\n10\t3\t212\n10\t4\t541\n10\t5\t3188\n10\t6\t691\n10\t7\t5\n11\t0\t4644\n11\t1\t47\n11\t2\t25\n11\t3\t233\n11\t4\t591\n11\t5\t3330\n11\t6\t657\n11\t7\t7\n12\t0\t4739\n12\t1\t51\n12\t2\t34\n12\t3\t280\n12\t4\t566\n12\t5\t3384\n12\t6\t589\n12\t7\t12\n13\t0\t5318\n13\t1\t49\n13\t2\t33\n13\t3\t375\n13\t4\t540\n13\t5\t3726\n13\t6\t680\n13\t7\t8\n14\t0\t6010\n14\t1\t57\n14\t2\t34\n14\t3\t624\n14\t4\t634\n14\t5\t4210\n14\t6\t700\n14\t7\t15\n15\t0\t7526\n15\t1\t67\n15\t2\t28\n15\t3\t540\n15\t4\t663\n15\t5\t4782\n15\t6\t791\n15\t7\t3\n16\t0\t8679\n16\t1\t68\n16\t2\t35\n16\t3\t479\n16\t4\t678\n16\t5\t5224\n16\t6\t836\n16\t7\t9\n17\t0\t9149\n17\t1\t64\n17\t2\t46\n17\t3\t432\n17\t4\t750\n17\t5\t5629\n17\t6\t877\n17\t7\t15\n18\t0\t8729\n18\t1\t44\n18\t2\t49\n18\t3\t429\n18\t4\t696\n18\t5\t5851\n18\t6\t929\n18\t7\t17\n19\t0\t7875\n19\t1\t49\n19\t2\t41\n19\t3\t528\n19\t4\t685\n19\t5\t5831\n19\t6\t925\n19\t7\t15\n20\t0\t7276\n20\t1\t53\n20\t2\t33\n20\t3\t604\n20\t4\t703\n20\t5\t5924\n20\t6\t994\n20\t7\t20\n21\t0\t6841\n21\t1\t44\n21\t2\t39\n21\t3\t584\n21\t4\t701\n21\t5\t6124\n21\t6\t1035\n21\t7\t23\n22\t0\t5801\n22\t1\t36\n22\t2\t39\n22\t3\t555\n22\t4\t632\n22\t5\t5692\n22\t6\t915\n22\t7\t25\n23\t0\t3989\n23\t1\t36\n23\t2\t28\n23\t3\t461\n23\t4\t455\n23\t5\t4683\n23\t6\t536\n23\t7\t23\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.0.1:4040/jobs/job?id=29"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1532538465253_-1876065002","id":"20180724-215908_1955080297","dateCreated":"2018-07-25T10:07:45-0700","dateStarted":"2018-07-30T16:52:10-0700","dateFinished":"2018-07-30T16:52:12-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:107"},{"text":"%sql\nselect prediction, count(1) as totalpickups from uber group by prediction","user":"anonymous","dateUpdated":"2018-08-14T16:57:20-0700","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"editorHide":false,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"prediction":"string","totalpickups":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"prediction","index":0,"aggr":"sum"}],"groups":[{"name":"prediction","index":0,"aggr":"sum"}],"values":[{"name":"totalpickups","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"prediction\ttotalpickups\n1\t906\n6\t14911\n3\t8138\n5\t91852\n4\t12576\n7\t252\n2\t621\n0\t119589\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.0.1:4040/jobs/job?id=30","http://192.168.0.1:4040/jobs/job?id=31","http://192.168.0.1:4040/jobs/job?id=32","http://192.168.0.1:4040/jobs/job?id=33","http://192.168.0.1:4040/jobs/job?id=34"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1532538465254_457801473","id":"20180724-220557_1639974052","dateCreated":"2018-07-25T10:07:45-0700","dateStarted":"2018-07-30T16:52:12-0700","dateFinished":"2018-07-30T16:52:14-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:108"},{"text":"ubermodel.write.overwrite.save(\"/Users/kaicat/server/spark-ml-kmeans-uber/data/ubermodelbkp\")\n","user":"anonymous","dateUpdated":"2018-07-30T16:52:14-0700","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.0.1:4040/jobs/job?id=35","http://192.168.0.1:4040/jobs/job?id=36"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1532538465254_583155271","id":"20180724-221530_2032139680","dateCreated":"2018-07-25T10:07:45-0700","dateStarted":"2018-07-30T16:52:14-0700","dateFinished":"2018-07-30T16:52:15-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:109"},{"text":"\n\nval map_pings = spark.sql(\"select dt, lat, lon from uber where lat between 39.9445 and 41.3182 and lon between -74.7685 and -72.4064 limit 20\")\n\nmap_pings.show()\nz.angularBind(\"locations\", map_pings.collect())\nz.angularBind(\"paragraph\", z.getInterpreterContext().getParagraphId())\n// get the paragraph id of the the angular paragraph and put it below\n//z.run(\"20171127-081000_380354042\")","user":"anonymous","dateUpdated":"2018-07-30T16:52:31-0700","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{"0":{"graph":{"mode":"table","height":274,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"map_pings: org.apache.spark.sql.DataFrame = [dt: timestamp, lat: double ... 1 more field]\n+-------------------+-------+--------+\n|                 dt|    lat|     lon|\n+-------------------+-------+--------+\n|2014-08-01 00:00:00|40.3495|-74.0667|\n|2014-08-01 00:00:00|40.3495|-74.0667|\n|2014-08-01 00:00:00|40.6754| -74.017|\n|2014-08-01 00:00:00|40.7303|-74.0029|\n|2014-08-01 00:01:00|40.7052|-74.0094|\n|2014-08-01 00:01:00|40.7073|-74.0054|\n|2014-08-01 00:01:00| 40.742|-74.0041|\n|2014-08-01 00:01:00|40.7552|-73.9724|\n|2014-08-01 00:02:00|40.6123| -73.956|\n|2014-08-01 00:02:00| 40.705|-73.9204|\n|2014-08-01 00:02:00|40.7236|-73.9913|\n|2014-08-01 00:02:00|40.7407|-74.0077|\n|2014-08-01 00:02:00|40.7642|-73.9103|\n|2014-08-01 00:03:00|40.6969|-73.9064|\n|2014-08-01 00:03:00|40.7488|-73.9868|\n|2014-08-01 00:03:00|40.7605|-73.9757|\n|2014-08-01 00:04:00|40.7279|-74.0059|\n|2014-08-01 00:04:00|40.7398|-74.0062|\n|2014-08-01 00:04:00| 40.753|-73.9787|\n|2014-08-01 00:05:00|40.6834|-73.9966|\n+-------------------+-------+--------+\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.0.1:4040/jobs/job?id=40","http://192.168.0.1:4040/jobs/job?id=41"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1532538465254_1676901106","id":"20180724-221813_1943383318","dateCreated":"2018-07-25T10:07:45-0700","dateStarted":"2018-07-30T16:52:31-0700","dateFinished":"2018-07-30T16:52:32-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:110"},{"text":"%angular\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.13/leaflet.draw.css\" />\n.\n<script src='https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.13/leaflet.draw.js'></script>\n<div id=\"map\" style=\"height: 300px; width: 100%\"></div>\n\n<script type=\"text/javascript\">\nfunction initMap() {\n    var element = $('#textbox');\n    var map = L.map('map').setView([30.00, -30.00], 3);\n   \n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n    var geoMarkers = L.layerGroup().addTo(map);\n    var drawnItems = new L.FeatureGroup();\n    \n    map.addLayer(drawnItems);\n    \n    var drawControl = new L.Control.Draw({\n        draw: {\n             polygon: false,\n             marker: false,\n             polyline: false\n        },\n        edit: {\n            featureGroup: drawnItems\n        }\n    });\n    map.addControl(drawControl);\n    \n    map.on('draw:created', function (e) {\n        var type = e.layerType;\n        var layer = e.layer;\n        drawnItems.addLayer(layer);\n        element.val(layer.getBounds().toBBoxString());\n        map.fitBounds(layer.getBounds());\n        window.setTimeout(function(){\n           //Triggers Angular to do its thing with changed model values\n           element.trigger('input');\n        }, 500);\n    });\n    \n    var el = angular.element($('#map').parent('.ng-scope'));\n    var $scope = el.scope().compiledScope;\n   \n    angular.element(el).ready(function() {\n        window.locationWatcher = $scope.$watch('locations', function(newValue, oldValue) {\n            $scope.latlng = [];\n            angular.forEach(newValue, function(event) {\n                if (event)\n                  var marker = L.marker([event.values[1], event.values[2]]).bindPopup(event.values[0]).addTo(geoMarkers);\n                  $scope.latlng.push(L.latLng(event.values[1], event.values[2]));\n            });\n            var bounds = L.latLngBounds($scope.latlng)\n            map.fitBounds(bounds)\n        })\n    });\n\n}\n\nif (window.locationWatcher) { window.locationWatcher(); }\n\n// ensure we only load the script once, seems to cause issues otherwise\nif (window.L) {\n    initMap();\n} else {\n    console.log('Loading Leaflet library');\n    var sc = document.createElement('script');\n    sc.type = 'text/javascript';\n    sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.js';\n    sc.onerror = function(err) { alert(err); }\n    document.getElementsByTagName('head')[0].appendChild(sc);\n    s2.onload = initMap;\n}\n</script>\n<p>Testing the Map</p>\n\n<form class=\"form-inline\">\n  <div class=\"form-group\">\n    <input id=\"textbox\" ng-model=\"box\" data-ng-change=\"z.runParagraph(paragraph);\"></input>\n    <label for=\"paragraphId\">Paragraph Id: </label>\n    <input type=\"text\" class=\"form-control\" id=\"paragraphId\" placeholder=\"Paragraph Id ...\" ng-model=\"paragraph\"></input>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"z.runParagraph(paragraph)\"> Run Paragraph</button>\n</form>\n","user":"anonymous","dateUpdated":"2018-08-13T22:15:35-0700","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.13/leaflet.draw.css\" />\n.\n<script src='https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.13/leaflet.draw.js'></script>\n<div id=\"map\" style=\"height: 300px; width: 100%\"></div>\n\n<script type=\"text/javascript\">\nfunction initMap() {\n    var element = $('#textbox');\n    var map = L.map('map').setView([30.00, -30.00], 3);\n   \n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n    var geoMarkers = L.layerGroup().addTo(map);\n    var drawnItems = new L.FeatureGroup();\n    \n    map.addLayer(drawnItems);\n    \n    var drawControl = new L.Control.Draw({\n        draw: {\n             polygon: false,\n             marker: false,\n             polyline: false\n        },\n        edit: {\n            featureGroup: drawnItems\n        }\n    });\n    map.addControl(drawControl);\n    \n    map.on('draw:created', function (e) {\n        var type = e.layerType;\n        var layer = e.layer;\n        drawnItems.addLayer(layer);\n        element.val(layer.getBounds().toBBoxString());\n        map.fitBounds(layer.getBounds());\n        window.setTimeout(function(){\n           //Triggers Angular to do its thing with changed model values\n           element.trigger('input');\n        }, 500);\n    });\n    \n    var el = angular.element($('#map').parent('.ng-scope'));\n    var $scope = el.scope().compiledScope;\n   \n    angular.element(el).ready(function() {\n        window.locationWatcher = $scope.$watch('locations', function(newValue, oldValue) {\n            $scope.latlng = [];\n            angular.forEach(newValue, function(event) {\n                if (event)\n                  var marker = L.marker([event.values[1], event.values[2]]).bindPopup(event.values[0]).addTo(geoMarkers);\n                  $scope.latlng.push(L.latLng(event.values[1], event.values[2]));\n            });\n            var bounds = L.latLngBounds($scope.latlng)\n            map.fitBounds(bounds)\n        })\n    });\n\n}\n\nif (window.locationWatcher) { window.locationWatcher(); }\n\n// ensure we only load the script once, seems to cause issues otherwise\nif (window.L) {\n    initMap();\n} else {\n    console.log('Loading Leaflet library');\n    var sc = document.createElement('script');\n    sc.type = 'text/javascript';\n    sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.js';\n    sc.onerror = function(err) { alert(err); }\n    document.getElementsByTagName('head')[0].appendChild(sc);\n    s2.onload = initMap;\n}\n</script>\n<p>Testing the Map</p>\n\n<form class=\"form-inline\">\n  <div class=\"form-group\">\n    <input id=\"textbox\" ng-model=\"box\" data-ng-change=\"z.runParagraph(paragraph);\"></input>\n    <label for=\"paragraphId\">Paragraph Id: </label>\n    <input type=\"text\" class=\"form-control\" id=\"paragraphId\" placeholder=\"Paragraph Id ...\" ng-model=\"paragraph\"></input>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"z.runParagraph(paragraph)\"> Run Paragraph</button>\n</form>"}]},"apps":[],"jobName":"paragraph_1532538465254_1350444044","id":"20180725-095401_1452979978","dateCreated":"2018-07-25T10:07:45-0700","dateStarted":"2018-08-13T22:15:35-0700","dateFinished":"2018-08-13T22:15:35-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:111"},{"text":"%angular\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.13/leaflet.draw.css\" />\n.\n<script src='https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.13/leaflet.draw.js'></script>\n<div id=\"map\" style=\"height: 300px; width: 100%\"></div>\n\n<script type=\"text/javascript\">\nfunction initMap() {\n    var element = $('#textbox');\n    var map = L.map('map').setView([30.00, -30.00], 3);\n   \n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n    var geoMarkers = L.layerGroup().addTo(map);\n    var drawnItems = new L.FeatureGroup();\n    \n    map.addLayer(drawnItems);\n    \n    var drawControl = new L.Control.Draw({\n        draw: {\n             polygon: false,\n             marker: false,\n             polyline: false\n        },\n        edit: {\n            featureGroup: drawnItems\n        }\n    });\n    map.addControl(drawControl);\n    \n    map.on('draw:created', function (e) {\n        var type = e.layerType;\n        var layer = e.layer;\n        drawnItems.addLayer(layer);\n        element.val(layer.getBounds().toBBoxString());\n        map.fitBounds(layer.getBounds());\n        window.setTimeout(function(){\n           //Triggers Angular to do its thing with changed model values\n           element.trigger('input');\n        }, 500);\n    });\n    \n    var el = angular.element($('#map').parent('.ng-scope'));\n    var $scope = el.scope().compiledScope;\n   \n    angular.element(el).ready(function() {\n        window.locationWatcher = $scope.$watch('locations', function(newValue, oldValue) {\n            $scope.latlng = [];\n            angular.forEach(newValue, function(event) {\n                if (event)\n                  var marker = L.marker([event.values[1], event.values[2]]).bindPopup(event.values[0]).addTo(geoMarkers);\n                  $scope.latlng.push(L.latLng(event.values[1], event.values[2]));\n            });\n            var bounds = L.latLngBounds($scope.latlng)\n            map.fitBounds(bounds)\n        })\n    });\n\n}\n\nif (window.locationWatcher) { window.locationWatcher(); }\n\n// ensure we only load the script once, seems to cause issues otherwise\nif (window.L) {\n    initMap();\n} else {\n    console.log('Loading Leaflet library');\n    var sc = document.createElement('script');\n    sc.type = 'text/javascript';\n    sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.js';\n    sc.onerror = function(err) { alert(err); }\n    document.getElementsByTagName('head')[0].appendChild(sc);\n    s2.onload = initMap;\n}\n</script>\n<p>Testing the Map</p>\n\n<form class=\"form-inline\">\n  <div class=\"form-group\">\n    <input id=\"textbox\" ng-model=\"box\" data-ng-change=\"z.runParagraph(paragraph);\"></input>\n    <label for=\"paragraphId\">Paragraph Id: </label>\n    <input type=\"text\" class=\"form-control\" id=\"paragraphId\" placeholder=\"Paragraph Id ...\" ng-model=\"paragraph\"></input>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"z.runParagraph(paragraph)\"> Run Paragraph</button>\n</form>","user":"anonymous","dateUpdated":"2018-07-30T16:52:19-0700","config":{"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.css\" />\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.13/leaflet.draw.css\" />\n.\n<script src='https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.13/leaflet.draw.js'></script>\n<div id=\"map\" style=\"height: 300px; width: 100%\"></div>\n\n<script type=\"text/javascript\">\nfunction initMap() {\n    var element = $('#textbox');\n    var map = L.map('map').setView([30.00, -30.00], 3);\n   \n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n    var geoMarkers = L.layerGroup().addTo(map);\n    var drawnItems = new L.FeatureGroup();\n    \n    map.addLayer(drawnItems);\n    \n    var drawControl = new L.Control.Draw({\n        draw: {\n             polygon: false,\n             marker: false,\n             polyline: false\n        },\n        edit: {\n            featureGroup: drawnItems\n        }\n    });\n    map.addControl(drawControl);\n    \n    map.on('draw:created', function (e) {\n        var type = e.layerType;\n        var layer = e.layer;\n        drawnItems.addLayer(layer);\n        element.val(layer.getBounds().toBBoxString());\n        map.fitBounds(layer.getBounds());\n        window.setTimeout(function(){\n           //Triggers Angular to do its thing with changed model values\n           element.trigger('input');\n        }, 500);\n    });\n    \n    var el = angular.element($('#map').parent('.ng-scope'));\n    var $scope = el.scope().compiledScope;\n   \n    angular.element(el).ready(function() {\n        window.locationWatcher = $scope.$watch('locations', function(newValue, oldValue) {\n            $scope.latlng = [];\n            angular.forEach(newValue, function(event) {\n                if (event)\n                  var marker = L.marker([event.values[1], event.values[2]]).bindPopup(event.values[0]).addTo(geoMarkers);\n                  $scope.latlng.push(L.latLng(event.values[1], event.values[2]));\n            });\n            var bounds = L.latLngBounds($scope.latlng)\n            map.fitBounds(bounds)\n        })\n    });\n\n}\n\nif (window.locationWatcher) { window.locationWatcher(); }\n\n// ensure we only load the script once, seems to cause issues otherwise\nif (window.L) {\n    initMap();\n} else {\n    console.log('Loading Leaflet library');\n    var sc = document.createElement('script');\n    sc.type = 'text/javascript';\n    sc.src = 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.js';\n    sc.onerror = function(err) { alert(err); }\n    document.getElementsByTagName('head')[0].appendChild(sc);\n    s2.onload = initMap;\n}\n</script>\n<p>Testing the Map</p>\n\n<form class=\"form-inline\">\n  <div class=\"form-group\">\n    <input id=\"textbox\" ng-model=\"box\" data-ng-change=\"z.runParagraph(paragraph);\"></input>\n    <label for=\"paragraphId\">Paragraph Id: </label>\n    <input type=\"text\" class=\"form-control\" id=\"paragraphId\" placeholder=\"Paragraph Id ...\" ng-model=\"paragraph\"></input>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"z.runParagraph(paragraph)\"> Run Paragraph</button>\n</form>"}]},"apps":[],"jobName":"paragraph_1532538465254_-1037458636","id":"20180725-100045_14228020","dateCreated":"2018-07-25T10:07:45-0700","dateStarted":"2018-07-30T16:52:19-0700","dateFinished":"2018-07-30T16:52:19-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:112"},{"text":"%angular\n","user":"anonymous","dateUpdated":"2018-07-30T16:52:19-0700","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/undefined"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1532994739373_-1289148869","id":"20180730-165219_1901969164","dateCreated":"2018-07-30T16:52:19-0700","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:113"}],"name":"Zeppelin-Spark-demo","id":"2DNM5HA4B","noteParams":{},"noteForms":{},"angularObjects":{"angular:shared_process":[],"spark:shared_process":[{"name":"paragraph","object":"20180724-221813_1943383318","noteId":"2DNM5HA4B"},{"name":"locations","object":[{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:00:00 AM",40.3495,-74.0667]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:00:00 AM",40.3495,-74.0667]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:00:00 AM",40.6754,-74.017]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:00:00 AM",40.7303,-74.0029]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:01:00 AM",40.7052,-74.0094]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:01:00 AM",40.7073,-74.0054]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:01:00 AM",40.742,-74.0041]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:01:00 AM",40.7552,-73.9724]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:02:00 AM",40.6123,-73.956]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:02:00 AM",40.705,-73.9204]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:02:00 AM",40.7236,-73.9913]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:02:00 AM",40.7407,-74.0077]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:02:00 AM",40.7642,-73.9103]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:03:00 AM",40.6969,-73.9064]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:03:00 AM",40.7488,-73.9868]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:03:00 AM",40.7605,-73.9757]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:04:00 AM",40.7279,-74.0059]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:04:00 AM",40.7398,-74.0062]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:04:00 AM",40.753,-73.9787]},{"schema":{"fields":[{"name":"dt","dataType":{"ordering":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lat","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}},{"name":"lon","dataType":{"numeric":{},"fractional":{},"asIntegral":{}},"nullable":true,"metadata":{"map":{},"_hashCode":-1609326920,"bitmap$0":true}}],"_hashCode":1711595425,"bitmap$0":8},"values":["Aug 1, 2014 12:05:00 AM",40.6834,-73.9966]}],"noteId":"2DNM5HA4B"}]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}